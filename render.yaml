# =================================================================
# RENDER.YAML - CONFIGURAÇÃO FINAL E VÁLIDA
# =================================================================

# O Render exige que o Banco de Dados use a seção 'databases' e que seja
# um plano pago para ser estável, mas tentaremos o 'free'.
databases:
  - name: gabrielly-db
    plan: free # Permitido para o PostgreSQL

services:
  # =================================================================
  # 1. BACKEND NODE.JS (API Principal)
  # CRÍTICO: DEVE SER STARTER, NÃO FREE, para ser um Web Service 24/7.
  # =================================================================
  - type: web
    name: gabrielly-backend-node
    runtime: node
    region: oregon
    plan: starter # CORREÇÃO: Mude para 'starter' ou 'standard' para Web Services
    rootDir: gabrielly-backend
    buildCommand: npm install
    startCommand: node server.js

    # SINTAXE CORRIGIDA: envVars é uma lista de mapas
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: "10000"
      - key: DATABASE_URL
        fromDatabase:
          name: gabrielly-db
          property: connectionString
      - key: DB_HOST
        fromDatabase:
          name: gabrielly-db
          property: host
      - key: DB_PORT
        fromDatabase:
          name: gabrielly-db
          property: port
      - key: DB_NAME
        fromDatabase:
          name: gabrielly-db
          property: database
      - key: DB_USER
        fromDatabase:
          name: gabrielly-db
          property: user
      - key: DB_PASSWORD
        fromDatabase:
          name: gabrielly-db
          property: password
      - key: OPENAI_API_KEY
        sync: false
      - key: REACT_APP_API_URL
        sync: false
      - key: EMAIL_USER
        sync: false
      - key: EMAIL_PASS
        sync: false
      - key: LOJISTA_EMAIL
        sync: false

  # =================================================================
  # 2. BACKEND JAVA (API Frete) - Spring Boot/Docker
  # CRÍTICO: DEVE SER STARTER, NÃO FREE.
  # =================================================================
  - type: web
    name: gabrielly-frete-api
    runtime: docker
    region: oregon
    plan: starter # CORREÇÃO: Necessita de 'starter' para Docker/Java estável
    rootDir: frete-api-java
    dockerfilePath: Dockerfile
    dockerContext: ./frete-api-java

    # SINTAXE CORRIGIDA: envVars é uma lista de mapas
    envVars:
      - key: PORT
        value: "8080"
      - key: JAVA_OPTS
        value: "-Xmx384m -Xms256m" # Corrigido para estabilidade
      - key: SPRING_PROFILES_ACTIVE
        value: production
      # Adicione as chaves MELHORENVIO aqui (após o deploy)

  # =================================================================
  # 3. FRONTEND REACT (Site Estático)
  # CRÍTICO: DEVE SER 'type: static'
  # =================================================================
  - type: static # CORREÇÃO: Deve ser 'static' para sites estáticos
    name: gabrielly-frontend
    region: oregon
    plan: free # 'free' é permitido para sites estáticos
    rootDir: gabrielly-frontend
    buildCommand: npm install && npm run build
    publishPath: build # O caminho de publicação é relativo ao rootDir

    # SINTAXE CORRIGIDA: envVars é uma lista de mapas
    envVars:
      - key: REACT_APP_API_URL
        value: https://gabrielly-backend-node.onrender.com
      - key: REACT_APP_FRETE_API_URL
        value: https://gabrielly-frete-api.onrender.com
